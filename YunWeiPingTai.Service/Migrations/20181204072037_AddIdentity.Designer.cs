// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using YunWeiPingTai.Service;

namespace YunWeiPingTai.Service.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20181204072037_AddIdentity")]
    partial class AddIdentity
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("YunWeiPingTai.Service.Entity.UnitEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(1024);

                    b.Property<DateTime>("CreateTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LinkMan")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNum")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Tel")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("T_Units");
                });

            modelBuilder.Entity("YunWeiPingTai.Service.Entity.UserEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<bool>("IsDeleted");

                    b.Property<DateTime?>("LastLoginErrorDateTime");

                    b.Property<int>("LoginErrorTimes");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PasswordSalt")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PhoneNum")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("Role");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("T_Users");
                });

            modelBuilder.Entity("YunWeiPingTai.Service.Entity.WorkLogEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsRead");

                    b.Property<string>("LogContent")
                        .IsRequired();

                    b.Property<DateTime?>("ReadTime");

                    b.Property<long>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("T_WorkLogs");
                });

            modelBuilder.Entity("YunWeiPingTai.Service.Entity.WorkLogReplyEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Reply")
                        .IsRequired()
                        .HasMaxLength(1024);

                    b.Property<long>("UserId");

                    b.Property<long?>("WorkLogEntityId");

                    b.Property<long>("WorkLogId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("WorkLogEntityId");

                    b.ToTable("T_WorkLogReplies");
                });

            modelBuilder.Entity("YunWeiPingTai.Service.Entity.WorkLogEntity", b =>
                {
                    b.HasOne("YunWeiPingTai.Service.Entity.UserEntity", "User")
                        .WithMany("WorkLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("YunWeiPingTai.Service.Entity.WorkLogReplyEntity", b =>
                {
                    b.HasOne("YunWeiPingTai.Service.Entity.UserEntity", "User")
                        .WithMany("WorkLogReplies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("YunWeiPingTai.Service.Entity.WorkLogEntity")
                        .WithMany("WorkLogReplies")
                        .HasForeignKey("WorkLogEntityId");
                });
#pragma warning restore 612, 618
        }
    }
}
